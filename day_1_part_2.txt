now comes the coding part for all of these 
the recurive code for climbing stairs 

this works like this 

**********************************************************************************************************************************************************
#include<bits/stdc++.h>
using namespace std;
int rec(int level,int n)
{
    if(level==n)
        return 1;
    if(level>n)
        return 0;
    int ans=0;
    for(int step=1;step<=3;step++)
    {
        if(level+step<=n)
        {
            int ways=rec(level+step,n);
            ans+=ways;
        }
    }
    return ans;
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif 

    ios::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<rec(0,3)<<"\n";
}
TC=o(3^n)
which shows TLE for large inputs (44 input LC)
**********************************************************************************************************************************************************

the solution for the second question 
placing n queens in a nXn matrix 

#include<bits/stdc++.h>
using namespace std;
int queen[20]; // where queen is in the row 

bool check(int row,int col)
{
    for(int i=0;i<row;i++)
    {
        int prow=i;
        int pcol=queen[i];
        if(pcol==col || abs(col-pcol)==abs(row-prow))
            return 0;
    }
    return 1;
}
int rec(int level, int n)
{
    if(level==n)return 1;
    int ans=0;
    for(int col=0;col<n;col++)
    {
         if(check(level,col))
         {
            queen[level]=col; // place the queen
            ans+=rec(level+1,n); // explore the option 
            queen[level]=-1; // revert placing the queen 
         }
    }
    return ans;
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif 

    ios::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);

    int n;n=8;
    memset(queen,-1,sizeof(queen));
     cout<<rec(0,n);
    // level , choice ,check , move 
}
**********************************************************************************************************************************************************
